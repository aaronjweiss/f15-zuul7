#BlueJ class context
comment0.params=description
comment0.target=Room(java.lang.String)
comment0.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment1.params=direction\ neighbor
comment1.target=void\ setExit(java.lang.String,\ Room)
comment1.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment10.params=description
comment10.target=Item\ removeItem(java.lang.String)
comment10.text=\r\n\ Removes\ an\ item\ from\ the\ room.\r\n\ \r\n\ @param\ description\ the\ shorthand\ description\ of\ the\ item\r\n\ @return\ the\ item\ being\ removed.\r\n
comment11.params=name\ character
comment11.target=void\ addNPC(java.lang.String,\ NPC)
comment11.text=\r\n\ Adds\ an\ NPC\ to\ the\ room\r\n\ \r\n\ @param\ name\ \ The\ name\ of\ the\ character\ to\ be\ added\r\n\ @param\ character\ \ The\ character\ being\ added\r\n
comment12.params=name
comment12.target=boolean\ hasNPC(java.lang.String)
comment12.text=\r\n\ Checks\ to\ see\ if\ the\ named\ NPC\ is\ in\ the\ current\ room\r\n\ \r\n\ @param\ name\ \ The\ name\ of\ the\ character\ to\ be\ searched\ for\r\n\ @return\ True\ if\ the\ room\ contains\ the\ desired\ NPC,\ false\ otherwise\r\n
comment13.params=name
comment13.target=void\ removeNPC(java.lang.String)
comment13.text=\r\n\ Removes\ an\ NPC\ from\ the\ room\r\n\ \r\n\ @param\ name\ \ The\ name\ of\ the\ character\ to\ be\ removed\r\n
comment14.params=
comment14.target=void\ refreshExit()
comment14.text=\r\n\ Does\ nothing\ unless\ this\ is\ a\ bus\r\n
comment15.params=
comment15.target=java.lang.String\ getItemList()
comment15.text=\r\n\ Prints\ the\ items\ within\ the\ room.\r\n\ \r\n\ @return\ String\ of\ items\ in\ the\ room\r\n
comment16.params=
comment16.target=java.lang.String\ getNPCList()
comment16.text=\r\n\ Lists\ any\ NPCs\ that\ are\ in\ the\ room\r\n\ \r\n\ @return\ String\ of\ any\ characters\ in\ the\ room\r\n
comment17.params=name
comment17.target=java.lang.String\ getGreeting(java.lang.String)
comment17.text=\r\n\ Returns\ the\ greeting\ of\ an\ NPC\ in\ this\ room\r\n
comment18.params=
comment18.target=boolean\ isLocked()
comment18.text=\r\n\ Determines\ if\ the\ room\ is\ locked\r\n\ \r\n\ @return\ boolean\ \ Returns\ true\ if\ the\ room\ is\ locked,\ false\ otherwise\r\n
comment19.params=
comment19.target=void\ unlockRoom()
comment19.text=\r\n\ Unlocks\ a\ locked\ room\r\n
comment2.params=
comment2.target=void\ removeAllExits()
comment20.params=
comment20.target=void\ lockRoom()
comment20.text=\r\n\ Locks\ a\ room\r\n
comment3.params=
comment3.target=java.lang.String\ getShortDescription()
comment3.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment4.params=newDescription
comment4.target=void\ setShortDescription(java.lang.String)
comment4.text=\r\n\ Sets\ the\ short\ description\ of\ the\ room\r\n\ @param\ The\ new\ description\ of\ the\ room\r\n
comment5.params=
comment5.target=java.lang.String\ getLongDescription()
comment5.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment6.params=
comment6.target=java.lang.String\ getExitString()
comment6.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment7.params=direction
comment7.target=Room\ getExit(java.lang.String)
comment7.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment8.params=description\ item
comment8.target=void\ addItem(java.lang.String,\ Item)
comment8.text=\r\n\ Adds\ an\ item\ into\ the\ room.\r\n\ \r\n\ @param\ description\ the\ shorthand\ description\ of\ the\ item\r\n\ @param\ item\ the\ item\ being\ added.\r\n
comment9.params=description
comment9.target=boolean\ hasItem(java.lang.String)
comment9.text=\r\n\ Adds\ an\ item\ into\ the\ room.\r\n\ \r\n\ @param\ description\ the\ shorthand\ description\ of\ the\ item\r\n\ @return\ Non-null\ value\ if\ the\ item\ exists\r\n
numComments=21
